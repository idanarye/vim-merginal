*merginal.txt*


Author:  Idan Arye <https://github.com/idanarye/>
License: Same terms as Vim itself (see |license|)

Version: 2.2.4

INTRODUCTION                                                      *merginal*

Merginal aims provide a nice inteface for dealing with Git branches.  It
offers interactive TUI for:

* Viewing the list of branches
* Checking out branches from that list
* Creating new branches
* Deleting branches
* Merging branches
* Rebasing branches
* Solving merge conflicts
* Renaming branches
* Viewing git history for branches


REQUIREMENTS                                         *merginal-requirements*

Merginal is based on Fugitive, so it requires Fugitive. If you don't have it
already you can get it from https://github.com/tpope/vim-fugitive

It should go without saying that you need Git.

Under Windows, vimproc is an optional requirement. Merginal will work without
it, but it'll pop an ugly console window every time it needs to run a Git
command. You can get vimproc from https://github.com/Shougo/vimproc.vim


USAGE                                                       *merginal-usage*

To use Merginal you need to know but one command: *:Merginal*. It'll open the
|merginal-branch-list| buffer, unless the repository is in merge mode then
it'll open the |merginal-merge-conflicts| buffer.

Like Fugitive's commands, |:Merginal| is native to the buffer, and will only
work in buffers that are parts of Git repositories.

You can also toggle the buffer with |:MerginalToggle| or close it with
|:MerginalClose|.

To see a list of keymaps available in each Merginal buffer, press ?.


CONFIGURATION                                       *merginal-configuration*

Set *g:merginal_windowWidth* or *g:merginal_windowSize* to the size of the window
where the Merginal buffer will be shown.

Set *g:merginal_splitType* to choose if vim-merginal will split vertically (the default)
or horizontally (set this to '', empty string).

Set *g:merginal_logCommitCount* to limit the number of commits displayed in the Merginal
buffer. Please note that there is no `See More` feature so there will be no indicator if
there are unseen commits.

Set *g:merginal_remoteVisible* to choose if vim-merginal will view remote branches (the default)
or hide (set this to 0).

Set *g:merginal_showCommands* 0 to hide git command being run (default is
1).

Set *g:merginal_resizeWindowToBranchLen* to 1 to automatically resize the split
to the longest branch name length. This overrides g:merginal_windowWidth and
g:merginal_windowSize. Default is 0.

Set *g:merginal_resizePadding* to the number of characters you would like padded to the end 
of the branch name length when using *g:merginal_resizeWindowToBranchLen*. Default 5.
